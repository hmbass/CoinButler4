version: '3.8'

services:
  # 프로덕션 환경용 설정
  trading-bot:
    build: .
    container_name: gpt-bitcoin-trading-bot-prod
    restart: unless-stopped
    environment:
      - UPBIT_ACCESS_KEY=${UPBIT_ACCESS_KEY}
      - UPBIT_SECRET_KEY=${UPBIT_SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SERPAPI_KEY=${SERPAPI_KEY}
      - HEADLESS=true
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - trading-network
    depends_on:
      - dashboard
    command: python autotrade.py
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  dashboard:
    build: .
    container_name: gpt-bitcoin-dashboard-prod
    restart: unless-stopped
    ports:
      - "8501:8501"
    environment:
      - UPBIT_ACCESS_KEY=${UPBIT_ACCESS_KEY}
      - UPBIT_SECRET_KEY=${UPBIT_SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SERPAPI_KEY=${SERPAPI_KEY}
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - trading-network
    command: streamlit run streamlit-app.py --server.port=8501 --server.address=0.0.0.0 --server.headless=true
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  # 프로덕션 환경에서 데이터베이스 활성화
  db:
    image: postgres:15-alpine
    container_name: gpt-bitcoin-db-prod
    restart: unless-stopped
    environment:
      - POSTGRES_DB=trading_db
      - POSTGRES_USER=trading_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - trading-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'

  # 프로덕션 환경에서 Redis 활성화
  redis:
    image: redis:7-alpine
    container_name: gpt-bitcoin-redis-prod
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - trading-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.05'

  # 프로덕션 환경에서 Nginx 활성화
  nginx:
    image: nginx:alpine
    container_name: gpt-bitcoin-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - dashboard
    networks:
      - trading-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.05'

volumes:
  postgres_data:
  redis_data:

networks:
  trading-network:
    driver: bridge 